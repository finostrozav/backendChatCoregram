{"remainingRequest":"/home/nobelti/personalProjects/node/public/node_modules/babel-loader/lib/index.js!/home/nobelti/personalProjects/node/public/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/nobelti/personalProjects/node/public/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nobelti/personalProjects/node/public/src/views/Messages.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/nobelti/personalProjects/node/public/src/views/Messages.vue","mtime":1621838080700},{"path":"/home/nobelti/personalProjects/node/public/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nobelti/personalProjects/node/public/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/nobelti/personalProjects/node/public/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nobelti/personalProjects/node/public/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// @ is an alias to /src\nimport TopBar from '@/components/TopBar.vue';\nimport ChatList from '@/components/ChatList.vue';\nexport default {\n  name: 'Chat',\n  components: {\n    TopBar: TopBar,\n    ChatList: ChatList\n  },\n  data: function data() {\n    return {\n      chatId: null,\n      newMessage: ''\n    };\n  },\n  computed: {\n    chat: function chat() {\n      var chat = [];\n\n      if (this.chatId !== null) {\n        chat = this.$store.state.chat.list[this.chatId];\n      }\n\n      return chat;\n    }\n  },\n  methods: {\n    sendMessage: function sendMessage() {\n      console.log(this.$store.state.user);\n      this.$store.dispatch('messages/sendMessage', {\n        texto: this.newMessage,\n        chat: this.$route.params.id,\n        user: this.$store.state.user.selected // user: {\n        //   id: 'aaaaaaa',\n        //   name: this.$store.state.user.selected.name\n        // }\n\n      });\n      this.newMessage = '';\n    }\n  },\n  created: function created() {\n    this.$store.dispatch('messages/getMessages', this.$route.params.id);\n  }\n};",{"version":3,"sources":["Messages.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAqBA;AACA,OAAA,MAAA,MAAA,yBAAA;AACA,OAAA,QAAA,MAAA,2BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,MAAA,EAAA,MADA;AAEA,IAAA,QAAA,EAAA;AAFA,GAFA;AAMA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,MAAA,EAAA,IADA;AAEA,MAAA,UAAA,EAAA;AAFA,KAAA;AAAA,GANA;AAUA,EAAA,QAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,UAAA,IAAA,GAAA,EAAA;;AACA,UAAA,KAAA,MAAA,KAAA,IAAA,EAAA;AACA,QAAA,IAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA,KAAA,MAAA,CAAA;AACA;;AAEA,aAAA,IAAA;AACA;AARA,GAVA;AAoBA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,sBAAA,EAAA;AACA,QAAA,KAAA,EAAA,KAAA,UADA;AAEA,QAAA,IAAA,EAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAFA;AAGA,QAAA,IAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,QAHA,CAIA;AACA;AACA;AACA;;AAPA,OAAA;AASA,WAAA,UAAA,GAAA,EAAA;AACA;AAbA,GApBA;AAmCA,EAAA,OAnCA,qBAmCA;AACA,SAAA,MAAA,CAAA,QAAA,CAAA,sBAAA,EAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AACA;AArCA,CAAA","sourcesContent":["<template>\n  <div class=\"chat\">\n    <top-bar back>\n      {{chat.name}}\n    </top-bar>\n    \n    <div class=\"messages\">\n      <div v-for=\"message in $store.state.messages.list\" :key=\"message\">\n        {{message.user.name}}:\n        {{message.message}}\n      </div>\n    </div>\n\n    <div class=\"composer\">\n      <input type=\"text\" v-model=\"newMessage\" />\n      <button @click=\"sendMessage()\">></button>\n    </div>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport TopBar from '@/components/TopBar.vue';\nimport ChatList from '@/components/ChatList.vue';\n\nexport default {\n  name: 'Chat',\n  components: {\n    TopBar,\n    ChatList,\n  },\n  data: () => ({\n    chatId: null,\n    newMessage: '',\n  }),\n  computed: {\n    chat() {\n      let chat = [];\n      if (this.chatId !== null) {\n        chat = this.$store.state.chat.list[this.chatId];\n      }\n\n      return chat;\n    },\n  },\n  methods: {\n    sendMessage() {\n      console.log(this.$store.state.user)\n      this.$store.dispatch('messages/sendMessage', {\n        texto: this.newMessage,\n        chat: this.$route.params.id,\n        user: this.$store.state.user.selected\n        // user: {\n        //   id: 'aaaaaaa',\n        //   name: this.$store.state.user.selected.name\n        // }\n      });\n      this.newMessage = '';\n    }\n  },\n  created() {\n    this.$store.dispatch('messages/getMessages', this.$route.params.id);\n  },\n};\n</script>\n\n<style scoped>\n  .messages {\n    margin-bottom: 32px;\n    width: 100%;\n  }\n\n  .composer {\n    background-color: #fff;\n    display: flex;\n    height: 32px;\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n  }\n    .composer input {\n      width: 90%;\n    }\n    .composer button {\n      width: 10%;\n    }\n</style>"],"sourceRoot":"src/views"}]}