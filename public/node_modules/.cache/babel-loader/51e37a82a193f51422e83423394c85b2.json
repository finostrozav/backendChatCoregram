{"remainingRequest":"/home/nobelti/personalProjects/node/public/node_modules/babel-loader/lib/index.js!/home/nobelti/personalProjects/node/public/node_modules/eslint-loader/index.js??ref--13-0!/home/nobelti/personalProjects/node/public/src/store/modules/messages.js","dependencies":[{"path":"/home/nobelti/personalProjects/node/public/src/store/modules/messages.js","mtime":1621835731950},{"path":"/home/nobelti/personalProjects/node/public/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nobelti/personalProjects/node/public/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/nobelti/personalProjects/node/public/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport axios from 'axios';\n\nfunction _getMessageId(state, id) {\n  var ret = null;\n\n  if (state.list) {\n    state.list.forEach(function (Message, index) {\n      if (Message.id === id) {\n        ret = index;\n      }\n    });\n  }\n\n  return ret;\n} // Inital state\n\n\nvar initialState = {\n  list: []\n}; // Getters\n\nvar getters = {\n  getMessageId: function getMessageId(state) {\n    return function (id) {\n      return _getMessageId(state, id);\n    };\n  }\n}; // Actions\n\nvar actions = {\n  getMessages: function getMessages(_ref, id) {\n    var commit = _ref.commit;\n    axios.get(\"\".concat(process.env.VUE_APP_API, \"/message?chat=\").concat(id)).then(function (response) {\n      var MessageList = response.data.body;\n      console.log(MessageList);\n      commit('setMessages', MessageList);\n    }).catch(function (err) {\n      console.error('Unable to get Message list', err);\n    });\n  },\n  sendMessage: function sendMessage(_ref2, data) {\n    var commit = _ref2.commit;\n    axios.post(\"\".concat(process.env.VUE_APP_API, \"/message\"), data);\n    console.log(commit, data);\n    commit('addMessage', data);\n  }\n}; // Mutations\n\nvar mutations = {\n  setMessages: function setMessages(state, data) {\n    state.list = data;\n  },\n  addMessage: function addMessage(state, data) {\n    state.list.push(data);\n  }\n}; // Export store\n\nexport default {\n  getters: getters,\n  actions: actions,\n  mutations: mutations,\n  state: initialState,\n  namespaced: true\n};",{"version":3,"sources":["/home/nobelti/personalProjects/node/public/src/store/modules/messages.js"],"names":["axios","getMessageId","state","id","ret","list","forEach","Message","index","initialState","getters","actions","getMessages","commit","get","process","env","VUE_APP_API","then","response","MessageList","data","body","console","log","catch","err","error","sendMessage","post","mutations","setMessages","addMessage","push","namespaced"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,aAAT,CAAsBC,KAAtB,EAA6BC,EAA7B,EAAkC;AAChC,MAAIC,GAAG,GAAG,IAAV;;AAEA,MAAIF,KAAK,CAACG,IAAV,EAAgB;AACdH,IAAAA,KAAK,CAACG,IAAN,CAAWC,OAAX,CAAmB,UAACC,OAAD,EAAUC,KAAV,EAAoB;AACrC,UAAID,OAAO,CAACJ,EAAR,KAAeA,EAAnB,EAAuB;AACrBC,QAAAA,GAAG,GAAGI,KAAN;AACD;AACF,KAJD;AAKD;;AAED,SAAOJ,GAAP;AACD,C,CAED;;;AACA,IAAMK,YAAY,GAAG;AACnBJ,EAAAA,IAAI,EAAE;AADa,CAArB,C,CAIA;;AACA,IAAMK,OAAO,GAAG;AACdT,EAAAA,YAAY,EAAE,sBAAAC,KAAK;AAAA,WAAI,UAACC,EAAD,EAAQ;AAC7B,aAAOF,aAAY,CAACC,KAAD,EAAQC,EAAR,CAAnB;AACD,KAFkB;AAAA;AADL,CAAhB,C,CAMA;;AACA,IAAMQ,OAAO,GAAG;AACdC,EAAAA,WADc,6BACUT,EADV,EACc;AAAA,QAAdU,MAAc,QAAdA,MAAc;AAC1Bb,IAAAA,KAAK,CAACc,GAAN,WAAaC,OAAO,CAACC,GAAR,CAAYC,WAAzB,2BAAqDd,EAArD,GACGe,IADH,CACQ,UAACC,QAAD,EAAc;AAClB,UAAMC,WAAW,GAAGD,QAAQ,CAACE,IAAT,CAAcC,IAAlC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACAP,MAAAA,MAAM,CAAC,aAAD,EAAgBO,WAAhB,CAAN;AACD,KALH,EAMGK,KANH,CAMS,UAACC,GAAD,EAAS;AACdH,MAAAA,OAAO,CAACI,KAAR,CAAc,4BAAd,EAA4CD,GAA5C;AACD,KARH;AASD,GAXa;AAYdE,EAAAA,WAZc,8BAYQP,IAZR,EAYc;AAAA,QAAfR,MAAe,SAAfA,MAAe;AAC1Bb,IAAAA,KAAK,CAAC6B,IAAN,WAAcd,OAAO,CAACC,GAAR,CAAYC,WAA1B,eAAiDI,IAAjD;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ,EAAoBQ,IAApB;AACAR,IAAAA,MAAM,CAAC,YAAD,EAAeQ,IAAf,CAAN;AACD;AAhBa,CAAhB,C,CAmBA;;AACA,IAAMS,SAAS,GAAG;AAChBC,EAAAA,WADgB,uBACJ7B,KADI,EACGmB,IADH,EACS;AACvBnB,IAAAA,KAAK,CAACG,IAAN,GAAagB,IAAb;AACD,GAHe;AAIhBW,EAAAA,UAJgB,sBAIL9B,KAJK,EAIEmB,IAJF,EAIQ;AACtBnB,IAAAA,KAAK,CAACG,IAAN,CAAW4B,IAAX,CAAgBZ,IAAhB;AACD;AANe,CAAlB,C,CAUA;;AACA,eAAe;AACbX,EAAAA,OAAO,EAAPA,OADa;AAEbC,EAAAA,OAAO,EAAPA,OAFa;AAGbmB,EAAAA,SAAS,EAATA,SAHa;AAIb5B,EAAAA,KAAK,EAAEO,YAJM;AAKbyB,EAAAA,UAAU,EAAE;AALC,CAAf","sourcesContent":["import axios from 'axios';\n\nfunction getMessageId(state, id)  {\n  let ret = null;\n\n  if (state.list) {\n    state.list.forEach((Message, index) => {\n      if (Message.id === id) {\n        ret = index;\n      }\n    });\n  }\n\n  return ret;\n}\n\n// Inital state\nconst initialState = {\n  list: [],\n};\n\n// Getters\nconst getters = {\n  getMessageId: state => (id) => {\n    return getMessageId(state, id);\n  },\n};\n\n// Actions\nconst actions = {\n  getMessages({ commit }, id) {\n    axios.get(`${process.env.VUE_APP_API}/message?chat=${id}`)\n      .then((response) => {\n        const MessageList = response.data.body;\n        console.log(MessageList);\n        commit('setMessages', MessageList);\n      })\n      .catch((err) => {\n        console.error('Unable to get Message list', err);\n      });\n  },\n  sendMessage({commit}, data) {\n    axios.post(`${process.env.VUE_APP_API}/message`, data);\n    console.log(commit, data);\n    commit('addMessage', data)\n  }\n};\n\n// Mutations\nconst mutations = {\n  setMessages(state, data) {\n    state.list = data;\n  },\n  addMessage(state, data) {\n    state.list.push(data);\n  },\n};\n\n\n// Export store\nexport default {\n  getters,\n  actions,\n  mutations,\n  state: initialState,\n  namespaced: true,\n};\n"]}]}