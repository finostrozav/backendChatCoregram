{"remainingRequest":"/home/nobelti/personalProjects/node/public/node_modules/babel-loader/lib/index.js!/home/nobelti/personalProjects/node/public/node_modules/eslint-loader/index.js??ref--13-0!/home/nobelti/personalProjects/node/public/src/store/modules/user.js","dependencies":[{"path":"/home/nobelti/personalProjects/node/public/src/store/modules/user.js","mtime":1567720727000},{"path":"/home/nobelti/personalProjects/node/public/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nobelti/personalProjects/node/public/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/nobelti/personalProjects/node/public/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport axios from 'axios';\n\nfunction _getUserId(state, id) {\n  var ret = null;\n\n  if (state.list) {\n    state.list.forEach(function (User, index) {\n      if (User._id === id) {\n        ret = User;\n      }\n    });\n  }\n\n  return ret;\n} // Inital state\n\n\nvar initialState = {\n  list: [],\n  selected: {}\n}; // Getters\n\nvar getters = {\n  getUserId: function getUserId(state) {\n    return function (id) {\n      return _getUserId(state, id);\n    };\n  }\n}; // Actions\n\nvar actions = {\n  getUsers: function getUsers(_ref) {\n    var commit = _ref.commit;\n    axios.get(\"\".concat(process.env.VUE_APP_API, \"/user\")).then(function (response) {\n      var UserList = response.data.body;\n      console.log(UserList);\n      commit('setUsers', UserList);\n    }).catch(function (err) {\n      console.error('Unable to get User list', err);\n    });\n  },\n  selectUser: function selectUser(_ref2, data) {\n    var commit = _ref2.commit;\n    // axios.post(...);\n    commit('selectUser', data);\n  }\n}; // Mutations\n\nvar mutations = {\n  setUsers: function setUsers(state, data) {\n    state.list = data;\n  },\n  selectUser: function selectUser(state, data) {\n    console.log('Commiting in...');\n    console.log(data);\n    state.selected = data;\n  },\n  addMessage: function addMessage(state, data) {\n    var index = _getUserId(state, data.User);\n\n    state.list[index].messages.push(data.message);\n    state.list[index].message = data.message;\n  }\n}; // Export store\n\nexport default {\n  getters: getters,\n  actions: actions,\n  mutations: mutations,\n  state: initialState,\n  namespaced: true\n};",{"version":3,"sources":["/home/nobelti/personalProjects/node/public/src/store/modules/user.js"],"names":["axios","getUserId","state","id","ret","list","forEach","User","index","_id","initialState","selected","getters","actions","getUsers","commit","get","process","env","VUE_APP_API","then","response","UserList","data","body","console","log","catch","err","error","selectUser","mutations","setUsers","addMessage","messages","push","message","namespaced"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,CAAmBC,KAAnB,EAA0BC,EAA1B,EAA+B;AAC7B,MAAIC,GAAG,GAAG,IAAV;;AAEA,MAAIF,KAAK,CAACG,IAAV,EAAgB;AACdH,IAAAA,KAAK,CAACG,IAAN,CAAWC,OAAX,CAAmB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAClC,UAAID,IAAI,CAACE,GAAL,KAAaN,EAAjB,EAAqB;AACnBC,QAAAA,GAAG,GAAGG,IAAN;AACD;AACF,KAJD;AAKD;;AAED,SAAOH,GAAP;AACD,C,CAED;;;AACA,IAAMM,YAAY,GAAG;AACnBL,EAAAA,IAAI,EAAE,EADa;AAEnBM,EAAAA,QAAQ,EAAE;AAFS,CAArB,C,CAKA;;AACA,IAAMC,OAAO,GAAG;AACdX,EAAAA,SAAS,EAAE,mBAAAC,KAAK;AAAA,WAAI,UAACC,EAAD,EAAQ;AAC1B,aAAOF,UAAS,CAACC,KAAD,EAAQC,EAAR,CAAhB;AACD,KAFe;AAAA;AADF,CAAhB,C,CAMA;;AACA,IAAMU,OAAO,GAAG;AACdC,EAAAA,QADc,0BACO;AAAA,QAAVC,MAAU,QAAVA,MAAU;AACnBf,IAAAA,KAAK,CAACgB,GAAN,WAAaC,OAAO,CAACC,GAAR,CAAYC,WAAzB,YACGC,IADH,CACQ,UAACC,QAAD,EAAc;AAClB,UAAMC,QAAQ,GAAGD,QAAQ,CAACE,IAAT,CAAcC,IAA/B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAP,MAAAA,MAAM,CAAC,UAAD,EAAaO,QAAb,CAAN;AACD,KALH,EAMGK,KANH,CAMS,UAACC,GAAD,EAAS;AACdH,MAAAA,OAAO,CAACI,KAAR,CAAc,yBAAd,EAAyCD,GAAzC;AACD,KARH;AASD,GAXa;AAYdE,EAAAA,UAZc,6BAYOP,IAZP,EAYa;AAAA,QAAfR,MAAe,SAAfA,MAAe;AACzB;AACAA,IAAAA,MAAM,CAAC,YAAD,EAAeQ,IAAf,CAAN;AACD;AAfa,CAAhB,C,CAkBA;;AACA,IAAMQ,SAAS,GAAG;AAChBC,EAAAA,QADgB,oBACP9B,KADO,EACAqB,IADA,EACM;AACpBrB,IAAAA,KAAK,CAACG,IAAN,GAAakB,IAAb;AACD,GAHe;AAIhBO,EAAAA,UAJgB,sBAIL5B,KAJK,EAIEqB,IAJF,EAIQ;AACtBE,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACArB,IAAAA,KAAK,CAACS,QAAN,GAAiBY,IAAjB;AACD,GARe;AAShBU,EAAAA,UATgB,sBASL/B,KATK,EASEqB,IATF,EASQ;AACtB,QAAIf,KAAK,GAAGP,UAAS,CAACC,KAAD,EAAQqB,IAAI,CAAChB,IAAb,CAArB;;AACAL,IAAAA,KAAK,CAACG,IAAN,CAAWG,KAAX,EAAkB0B,QAAlB,CAA2BC,IAA3B,CAAgCZ,IAAI,CAACa,OAArC;AACAlC,IAAAA,KAAK,CAACG,IAAN,CAAWG,KAAX,EAAkB4B,OAAlB,GAA4Bb,IAAI,CAACa,OAAjC;AACD;AAbe,CAAlB,C,CAiBA;;AACA,eAAe;AACbxB,EAAAA,OAAO,EAAPA,OADa;AAEbC,EAAAA,OAAO,EAAPA,OAFa;AAGbkB,EAAAA,SAAS,EAATA,SAHa;AAIb7B,EAAAA,KAAK,EAAEQ,YAJM;AAKb2B,EAAAA,UAAU,EAAE;AALC,CAAf","sourcesContent":["import axios from 'axios';\n\nfunction getUserId(state, id)  {\n  let ret = null;\n\n  if (state.list) {\n    state.list.forEach((User, index) => {\n      if (User._id === id) {\n        ret = User;\n      }\n    });\n  }\n\n  return ret;\n}\n\n// Inital state\nconst initialState = {\n  list: [],\n  selected: {},\n};\n\n// Getters\nconst getters = {\n  getUserId: state => (id) => {\n    return getUserId(state, id);\n  },\n};\n\n// Actions\nconst actions = {\n  getUsers({ commit }) {\n    axios.get(`${process.env.VUE_APP_API}/user`)\n      .then((response) => {\n        const UserList = response.data.body;\n        console.log(UserList);\n        commit('setUsers', UserList);\n      })\n      .catch((err) => {\n        console.error('Unable to get User list', err);\n      });\n  },\n  selectUser({commit}, data) {\n    // axios.post(...);\n    commit('selectUser', data);\n  }\n};\n\n// Mutations\nconst mutations = {\n  setUsers(state, data) {\n    state.list = data;\n  },\n  selectUser(state, data) {\n    console.log('Commiting in...');\n    console.log(data);\n    state.selected = data;\n  },\n  addMessage(state, data) {\n    let index = getUserId(state, data.User);\n    state.list[index].messages.push(data.message);\n    state.list[index].message = data.message;\n  },\n};\n\n\n// Export store\nexport default {\n  getters,\n  actions,\n  mutations,\n  state: initialState,\n  namespaced: true,\n};\n"]}]}