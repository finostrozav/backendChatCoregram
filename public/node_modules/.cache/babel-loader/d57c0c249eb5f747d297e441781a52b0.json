{"remainingRequest":"/home/nobelti/personalProjects/node/public/node_modules/babel-loader/lib/index.js!/home/nobelti/personalProjects/node/public/node_modules/eslint-loader/index.js??ref--13-0!/home/nobelti/personalProjects/node/public/src/store/modules/chat.js","dependencies":[{"path":"/home/nobelti/personalProjects/node/public/src/store/modules/chat.js","mtime":1621837518790},{"path":"/home/nobelti/personalProjects/node/public/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nobelti/personalProjects/node/public/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/nobelti/personalProjects/node/public/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport axios from 'axios';\n\nfunction _getChatId(state, id) {\n  var ret = null;\n\n  if (state.list) {\n    state.list.forEach(function (chat, index) {\n      if (chat.id === id) {\n        ret = index;\n      }\n    });\n  }\n\n  return ret;\n} // Inital state\n\n\nvar initialState = {\n  list: []\n}; // Getters\n\nvar getters = {\n  getChatId: function getChatId(state) {\n    return function (id) {\n      return _getChatId(state, id);\n    };\n  }\n}; // Actions\n\nvar actions = {\n  getChats: function getChats(_ref, id) {\n    var commit = _ref.commit;\n    axios.get(\"\".concat(process.env.VUE_APP_API, \"/chat/\").concat(id)).then(function (response) {\n      var chatList = response.data.body;\n      console.log(chatList);\n      commit('setChats', chatList);\n    }).catch(function (err) {\n      console.error('Unable to get chat list', err);\n    });\n  },\n  sendMessage: function sendMessage(_ref2, data) {\n    var commit = _ref2.commit;\n    // axios.post(...);\n    console.log(data.message);\n    commit('addMessage', {\n      chat: data.chat,\n      message: data.message\n    });\n  }\n}; // Mutations\n\nvar mutations = {\n  setChats: function setChats(state, data) {\n    state.list = data;\n  },\n  addMessage: function addMessage(state, data) {\n    var chatIndex = _getChatId(state, data.chat);\n\n    state.list[chatIndex].messages.push(data.message);\n    state.list[chatIndex].message = data.message;\n  }\n}; // Export store\n\nexport default {\n  getters: getters,\n  actions: actions,\n  mutations: mutations,\n  state: initialState,\n  namespaced: true\n};",{"version":3,"sources":["/home/nobelti/personalProjects/node/public/src/store/modules/chat.js"],"names":["axios","getChatId","state","id","ret","list","forEach","chat","index","initialState","getters","actions","getChats","commit","get","process","env","VUE_APP_API","then","response","chatList","data","body","console","log","catch","err","error","sendMessage","message","mutations","setChats","addMessage","chatIndex","messages","push","namespaced"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,CAAmBC,KAAnB,EAA0BC,EAA1B,EAA+B;AAC7B,MAAIC,GAAG,GAAG,IAAV;;AAEA,MAAIF,KAAK,CAACG,IAAV,EAAgB;AACdH,IAAAA,KAAK,CAACG,IAAN,CAAWC,OAAX,CAAmB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAClC,UAAID,IAAI,CAACJ,EAAL,KAAYA,EAAhB,EAAoB;AAClBC,QAAAA,GAAG,GAAGI,KAAN;AACD;AACF,KAJD;AAKD;;AAED,SAAOJ,GAAP;AACD,C,CAED;;;AACA,IAAMK,YAAY,GAAG;AACnBJ,EAAAA,IAAI,EAAE;AADa,CAArB,C,CAIA;;AACA,IAAMK,OAAO,GAAG;AACdT,EAAAA,SAAS,EAAE,mBAAAC,KAAK;AAAA,WAAI,UAACC,EAAD,EAAQ;AAC1B,aAAOF,UAAS,CAACC,KAAD,EAAQC,EAAR,CAAhB;AACD,KAFe;AAAA;AADF,CAAhB,C,CAMA;;AACA,IAAMQ,OAAO,GAAG;AACdC,EAAAA,QADc,0BACOT,EADP,EACW;AAAA,QAAdU,MAAc,QAAdA,MAAc;AACvBb,IAAAA,KAAK,CAACc,GAAN,WAAaC,OAAO,CAACC,GAAR,CAAYC,WAAzB,mBAA6Cd,EAA7C,GACGe,IADH,CACQ,UAACC,QAAD,EAAc;AAClB,UAAMC,QAAQ,GAAGD,QAAQ,CAACE,IAAT,CAAcC,IAA/B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAP,MAAAA,MAAM,CAAC,UAAD,EAAaO,QAAb,CAAN;AACD,KALH,EAMGK,KANH,CAMS,UAACC,GAAD,EAAS;AACdH,MAAAA,OAAO,CAACI,KAAR,CAAc,yBAAd,EAAyCD,GAAzC;AACD,KARH;AASD,GAXa;AAYdE,EAAAA,WAZc,8BAYQP,IAZR,EAYc;AAAA,QAAfR,MAAe,SAAfA,MAAe;AAC1B;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACQ,OAAjB;AACAhB,IAAAA,MAAM,CAAC,YAAD,EAAe;AAACN,MAAAA,IAAI,EAAEc,IAAI,CAACd,IAAZ;AAAkBsB,MAAAA,OAAO,EAAER,IAAI,CAACQ;AAAhC,KAAf,CAAN;AACD;AAhBa,CAAhB,C,CAmBA;;AACA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,QADgB,oBACP7B,KADO,EACAmB,IADA,EACM;AACpBnB,IAAAA,KAAK,CAACG,IAAN,GAAagB,IAAb;AACD,GAHe;AAIhBW,EAAAA,UAJgB,sBAIL9B,KAJK,EAIEmB,IAJF,EAIQ;AACtB,QAAIY,SAAS,GAAGhC,UAAS,CAACC,KAAD,EAAQmB,IAAI,CAACd,IAAb,CAAzB;;AACAL,IAAAA,KAAK,CAACG,IAAN,CAAW4B,SAAX,EAAsBC,QAAtB,CAA+BC,IAA/B,CAAoCd,IAAI,CAACQ,OAAzC;AACA3B,IAAAA,KAAK,CAACG,IAAN,CAAW4B,SAAX,EAAsBJ,OAAtB,GAAgCR,IAAI,CAACQ,OAArC;AACD;AARe,CAAlB,C,CAYA;;AACA,eAAe;AACbnB,EAAAA,OAAO,EAAPA,OADa;AAEbC,EAAAA,OAAO,EAAPA,OAFa;AAGbmB,EAAAA,SAAS,EAATA,SAHa;AAIb5B,EAAAA,KAAK,EAAEO,YAJM;AAKb2B,EAAAA,UAAU,EAAE;AALC,CAAf","sourcesContent":["import axios from 'axios';\n\nfunction getChatId(state, id)  {\n  let ret = null;\n\n  if (state.list) {\n    state.list.forEach((chat, index) => {\n      if (chat.id === id) {\n        ret = index;\n      }\n    });\n  }\n\n  return ret;\n}\n\n// Inital state\nconst initialState = {\n  list: [],\n};\n\n// Getters\nconst getters = {\n  getChatId: state => (id) => {\n    return getChatId(state, id);\n  },\n};\n\n// Actions\nconst actions = {\n  getChats({ commit }, id) {\n    axios.get(`${process.env.VUE_APP_API}/chat/${id}`)\n      .then((response) => {\n        const chatList = response.data.body;\n        console.log(chatList);\n        commit('setChats', chatList);\n      })\n      .catch((err) => {\n        console.error('Unable to get chat list', err);\n      });\n  },\n  sendMessage({commit}, data) {\n    // axios.post(...);\n    console.log(data.message);\n    commit('addMessage', {chat: data.chat, message: data.message})\n  }\n};\n\n// Mutations\nconst mutations = {\n  setChats(state, data) {\n    state.list = data;\n  },\n  addMessage(state, data) {\n    let chatIndex = getChatId(state, data.chat);\n    state.list[chatIndex].messages.push(data.message);\n    state.list[chatIndex].message = data.message;\n  },\n};\n\n\n// Export store\nexport default {\n  getters,\n  actions,\n  mutations,\n  state: initialState,\n  namespaced: true,\n};\n"]}]}